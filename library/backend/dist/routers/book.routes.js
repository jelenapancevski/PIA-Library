"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const books_controller_1 = require("../controllers/books.controller");
const bookRouter = express_1.default.Router();
bookRouter.route('/allBooks').get((req, res) => new books_controller_1.BooksController().allBooks(req, res));
bookRouter.route('/allBorrowed').get((req, res) => new books_controller_1.BooksController().allBorrowed(req, res));
bookRouter.route('/addBook').post((req, res) => new books_controller_1.BooksController().addBook(req, res));
bookRouter.route('/requestBook').post((req, res) => new books_controller_1.BooksController().requestBook(req, res));
bookRouter.route('/acceptRequest').post((req, res) => new books_controller_1.BooksController().acceptRequest(req, res));
bookRouter.route('/denyRequest').post((req, res) => new books_controller_1.BooksController().denyRequest(req, res));
bookRouter.route('/getRequests').get((req, res) => new books_controller_1.BooksController().getRequests(req, res));
bookRouter.route('/setDays').post((req, res) => new books_controller_1.BooksController().setDays(req, res));
bookRouter.route('/search').post((req, res) => new books_controller_1.BooksController().search(req, res));
bookRouter.route('/borrow').post((req, res) => new books_controller_1.BooksController().borrow(req, res));
bookRouter.route('/autoborrow').post((req, res) => new books_controller_1.BooksController().autoborrow(req, res));
bookRouter.route('/reserve').post((req, res) => new books_controller_1.BooksController().reserve(req, res));
bookRouter.route('/returnbook').post((req, res) => new books_controller_1.BooksController().returnbook(req, res));
bookRouter.route('/comment').post((req, res) => new books_controller_1.BooksController().comment(req, res));
bookRouter.route('/editcom').post((req, res) => new books_controller_1.BooksController().editcom(req, res));
bookRouter.route('/updateTitle').post((req, res) => new books_controller_1.BooksController().updateTitle(req, res));
bookRouter.route('/updateAuthors').post((req, res) => new books_controller_1.BooksController().updateAuthors(req, res));
bookRouter.route('/updateGenre').post((req, res) => new books_controller_1.BooksController().updateGenre(req, res));
bookRouter.route('/updatePublisher').post((req, res) => new books_controller_1.BooksController().updatePublisher(req, res));
bookRouter.route('/updateYearPublished').post((req, res) => new books_controller_1.BooksController().updateYearPublished(req, res));
bookRouter.route('/updateLanguage').post((req, res) => new books_controller_1.BooksController().updateLanguage(req, res));
bookRouter.route('/updateImage').post((req, res) => new books_controller_1.BooksController().updateImage(req, res));
bookRouter.route('/updateQuantity').post((req, res) => new books_controller_1.BooksController().updateQuantity(req, res));
bookRouter.route('/delete').post((req, res) => new books_controller_1.BooksController().delete(req, res));
bookRouter.route('/topThree').get((req, res) => new books_controller_1.BooksController().topThree(req, res));
bookRouter.route('/genre').get((req, res) => new books_controller_1.BooksController().genre(req, res));
bookRouter.route('/borrows').post((req, res) => new books_controller_1.BooksController().borrows(req, res));
bookRouter.route('/suggested').post((req, res) => new books_controller_1.BooksController().suggested(req, res));
bookRouter.route('/bookInfo').post((req, res) => new books_controller_1.BooksController().bookInfo(req, res));
bookRouter.route('/extend').post((req, res) => new books_controller_1.BooksController().extend(req, res));
bookRouter.route('/bookOfTheDay').get((req, res) => new books_controller_1.BooksController().bookOfTheDay(req, res));
bookRouter.route('/borrowedBooks').post((req, res) => new books_controller_1.BooksController().borrowedBooks(req, res));
bookRouter.route('/monthlyBooks').post((req, res) => new books_controller_1.BooksController().monthlyBooks(req, res));
bookRouter.route('/notificationSent').post((req, res) => new books_controller_1.BooksController().notificationSent(req, res));
exports.default = bookRouter;
//# sourceMappingURL=book.routes.js.map